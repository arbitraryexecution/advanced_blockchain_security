// SPDX-License-Identifier: UNLICENSED
pragma solidity 0.8.9^;

// TODO
interface bZx {
    function flashBorrowToken(
        uint256 borrowAmount,
        address borrower,
        address target,
        string calldata signature,
        bytes calldata data)
        external
        payable
        returns (bytes memory);
}

/*
 * Steps:
 * 1. Flash loan from bZx (this will be done in the script and target your 
 * 2. Swap 540 Eth to sUSD via KyberNetworkProxy (this will use the uniswap pool)
 * 3. Buy 20 Eth worth of sUSD via KyberNetworkProxy 18 times (this will use the sUSD Kyber reserve)
 * 4. Buy a large amount of sUSD via the Synthetix Depot contract with `exchangeEtherForSynths()`
 *    The attacker bought 943,837 sUSD with 6000 Ether
 * 5. Borrow Ether with sUSD on the bZx iETH contract
 * 6. Pay back the flash loan from bZx
 */

contract Exploit {

}
